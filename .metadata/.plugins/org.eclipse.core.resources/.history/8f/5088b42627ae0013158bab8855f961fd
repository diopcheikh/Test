package decorateur;

public class DecoratorPatternMain {

	public static void main(String[] args) {
		
		I a = new B();
		System.out.println("I a = new B() "+a.getI());
		I b = new A();
		System.out.println("I b = new A() "+b.getI());
		 B aa = (B)(new A());
		System.out.println("A aa = (A)(new B()); "+aa.getI());
		B aaa = (I)(new B());
		
		
		// Création de l'implementation et des décorateurs
//		final Implementation lImpl = new Implementation();
//		final ImplDecorateurB lImplDecB = new ImplDecorateurB(lImpl);
//		final ImplDecorateurA lImplDecA = new ImplDecorateurA(lImplDecB);
//
//		// Appel de la méthode du décorateur "conteneur"
//		lImplDecA.operation();

		// Affichage :
		// ImplDecorateurA avant
		// ImplDecorateurB avant
		// Implementation
		// ImplDecorateurB apres
		// ImplDecorateurA apres
	}
}
